/* autogenerated by Processing revision 1286 on 2024-03-27 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import processing.video.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class ascii extends PApplet {



Capture video;
int scale = 5; // Riduci la scala dei caratteri ASCII
String[] asciiCharacters = {"@", "#", "*", "+", "-", ":", ".", " "};

 public void setup() {
  /* size commented out by preprocessor */;
  video = new Capture(this, width, height);
  video.start();
  textSize(scale); // Riduci la dimensione del testo
  textAlign(LEFT, TOP);
  noCursor();
}

 public void draw() {
  if (video.available()) {
    video.read();
    loadPixels();
    background(0); // Imposta lo sfondo a nero
    for (int y = 0; y < video.height; y += scale) {
      for (int x = 0; x < video.width; x += scale) {
        int loc = x + y * video.width;
        int pixelColor = video.pixels[loc];
        float brightness = brightness(pixelColor);
        int index = PApplet.parseInt(map(brightness, 0, 255, 0, asciiCharacters.length));
        if (index >= 0 && index < asciiCharacters.length) {
          fill(0, 255, 0); // Imposta il colore del testo a verde
          text(asciiCharacters[index], x, y);
        }
      }
    }
  }
}


  public void settings() { size(640, 480); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "--full-screen", "--bgcolor=#666666", "--stop-color=#cccccc", "ascii" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
